package hyperion

// Generated by https://quicktype.io

type HistoryABISnapshotResponse struct {
	BlockNum    int64   `json:"block_num"`
	ABI         ABI     `json:"abi,omitempty"`
	QueryTimeMS float64 `json:"query_time_ms"`
}

type HistoryActionsResponse struct {
	QueryTimeMS   float64        `json:"query_time_ms"`
	Cached        bool           `json:"cached"`
	LIB           int64          `json:"lib"`
	Total         Total          `json:"total"`
	Actions       []Action       `json:"actions,omitempty"`
	SimpleActions []SimpleAction `json:"simple_actions,omitempty"`
}

type HistoryDeltasResponse struct {
	QueryTimeMS float64 `json:"query_time_ms"`
	Total       Total   `json:"total"`
	Deltas      []Delta `json:"deltas"`
}

type HistoryScheduleResponse struct {
	QueryTimeMS float64    `json:"query_time_ms"`
	Timestamp   string     `json:"timestamp"`
	BlockNum    int64      `json:"block_num"`
	Version     int64      `json:"version"`
	Producers   []Producer `json:"producers"`
}

type HistoryTransactionResponse struct {
	Executed    bool                `json:"executed"`
	TrxID       string              `json:"trx_id"`
	LIB         int64               `json:"lib"`
	Actions     []TransactionAction `json:"actions"`
	QueryTimeMS float64             `json:"query_time_ms"`
}

type HistoryCreatedAccountsResponse struct {
	QueryTimeMS float64          `json:"query_time_ms"`
	Accounts    []CreatedAccount `json:"accounts"`
}

type HistoryCreatorResponse struct {
	QueryTimeMS float64 `json:"query_time_ms"`
	Account     string  `json:"account"`
	Creator     string  `json:"creator"`
	Timestamp   string  `json:"timestamp"`
	BlockNum    int64   `json:"block_num"`
	TrxID       string  `json:"trx_id"`
}

type CreatedAccount struct {
	Name      string `json:"name"`
	Timestamp string `json:"timestamp"`
	TrxID     string `json:"trx_id"`
}

type TransactionAction struct {
	ActionOrdinal        int64             `json:"action_ordinal"`
	CreatorActionOrdinal int64             `json:"creator_action_ordinal"`
	Act                  TransactionAct    `json:"act"`
	ContextFree          bool              `json:"context_free"`
	Elapsed              string            `json:"elapsed"`
	AccountRAMDeltas     []AccountRAMDelta `json:"account_ram_deltas"`
	Timestamp            string            `json:"@timestamp"`
	BlockNum             int64             `json:"block_num"`
	Producer             string            `json:"producer"`
	TrxID                string            `json:"trx_id"`
	GlobalSequence       int64             `json:"global_sequence"`
	CPUUsageUs           *int64            `json:"cpu_usage_us,omitempty"`
	NetUsageWords        *int64            `json:"net_usage_words,omitempty"`
	Signatures           []string          `json:"signatures"`
	InlineCount          *int64            `json:"inline_count,omitempty"`
	InlineFiltered       *bool             `json:"inline_filtered,omitempty"`
	Receipts             []Receipt         `json:"receipts"`
	CodeSequence         int64             `json:"code_sequence"`
	ABISequence          int64             `json:"abi_sequence"`
	Notified             []Account         `json:"notified"`
	ActionTimestamp      string            `json:"timestamp"`
}

type TransactionAct struct {
	Account       Account         `json:"account"`
	Name          string          `json:"name"`
	Authorization []Authorization `json:"authorization"`
	Data          Data            `json:"data"`
}

type ImmutableTemplateDatum struct {
	Key   string   `json:"key"`
	Value []string `json:"value"`
}

type Receipt struct {
	Receiver       Account        `json:"receiver"`
	GlobalSequence string         `json:"global_sequence"`
	RecvSequence   string         `json:"recv_sequence"`
	AuthSequence   []AuthSequence `json:"auth_sequence"`
}

type AuthSequence struct {
	Account  Account `json:"account"`
	Sequence string  `json:"sequence"`
}

type Account string

const (
	Atomicassets Account = "atomicassets"
	Fckedupmyacc Account = "fckedupmyacc"
	Shomaiiblend Account = "shomaiiblend"
)

type Producer struct {
	ProducerName    string `json:"producer_name"`
	BlockSigningKey string `json:"block_signing_key"`
	LegacyKey       string `json:"legacy_key"`
}

type Delta struct {
	Timestamp  string    `json:"timestamp"`
	Code       string    `json:"code"`
	Scope      string    `json:"scope"`
	Table      string    `json:"table"`
	PrimaryKey string    `json:"primary_key"`
	Payer      string    `json:"payer"`
	Present    bool      `json:"present"`
	BlockNum   int64     `json:"block_num"`
	Data       DeltaData `json:"data"`
	BlockID    string    `json:"block_id"`
}

type DeltaData struct {
	Collection *string  `json:"collection,omitempty"`
	Bytes      *string  `json:"bytes,omitempty"`
	ClaimID    *string  `json:"claim_id,omitempty"`
	Blenderid  *string  `json:"blenderid,omitempty"`
	Blender    *string  `json:"blender,omitempty"`
	Templateid *int64   `json:"templateid,omitempty"`
	Assets     []string `json:"assets"`
	Scope      *string  `json:"scope,omitempty"`
}

type Action struct {
	Timestamp            string            `json:"@timestamp"`
	ActionTimestamp      string            `json:"timestamp"`
	BlockNum             int64             `json:"block_num"`
	TrxID                string            `json:"trx_id"`
	Act                  Act               `json:"act"`
	Notified             []string          `json:"notified"`
	AccountRAMDeltas     []AccountRAMDelta `json:"account_ram_deltas"`
	GlobalSequence       int64             `json:"global_sequence"`
	Producer             string            `json:"producer"`
	ActionOrdinal        int64             `json:"action_ordinal"`
	CreatorActionOrdinal int64             `json:"creator_action_ordinal"`
	CPUUsageUs           *int64            `json:"cpu_usage_us,omitempty"`
	NetUsageWords        *int64            `json:"net_usage_words,omitempty"`
}

type SimpleAction struct {
	Block         int64  `json:"block"`
	Timestamp     string `json:"timestamp"`
	Contract      string `json:"contract"`
	Action        string `json:"action"`
	Actors        string `json:"actors"`
	Notified      string `json:"notified"`
	TransactionID string `json:"transaction_id"`
	Data          Data   `json:"data"`
}

type AccountRAMDelta struct {
	Account string `json:"account"`
	Delta   int64  `json:"delta"`
}

type Act struct {
	Account       string          `json:"account"`
	Name          string          `json:"name"`
	Authorization []Authorization `json:"authorization"`
	Data          Data            `json:"data"`
}

type Authorization struct {
	Actor      string `json:"actor"`
	Permission string `json:"permission"`
}

type Data interface{}

type Total struct {
	Value    int64  `json:"value"`
	Relation string `json:"relation"`
}

type ABI struct {
	Version          string        `json:"version"`
	Types            []Type        `json:"types"`
	Structs          []Struct      `json:"structs"`
	Actions          []ABIAction   `json:"actions"`
	Tables           []Table       `json:"tables"`
	RicardianClauses []interface{} `json:"ricardian_clauses"`
	ErrorMessages    []interface{} `json:"error_messages"`
	ABIExtensions    []interface{} `json:"abi_extensions"`
	Variants         []Variant     `json:"variants"`
}

type ABIAction struct {
	Name              string `json:"name"`
	Type              string `json:"type"`
	RicardianContract string `json:"ricardian_contract"`
}

type Struct struct {
	Name   string  `json:"name"`
	Base   string  `json:"base"`
	Fields []Field `json:"fields"`
}

type Field struct {
	Name string `json:"name"`
	Type string `json:"type"`
}

type Table struct {
	Name      string        `json:"name"`
	IndexType IndexType     `json:"index_type"`
	KeyNames  []interface{} `json:"key_names"`
	KeyTypes  []interface{} `json:"key_types"`
	Type      string        `json:"type"`
}

type Type struct {
	NewTypeName string `json:"new_type_name"`
	Type        string `json:"type"`
}

type Variant struct {
	Name  string   `json:"name"`
	Types []string `json:"types"`
}

type IndexType string

const (
	I64 IndexType = "i64"
)
